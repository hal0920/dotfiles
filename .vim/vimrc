" ============================================================================
" default {{{
" ============================================================================
unlet! skip_defaults_vim
silent! source $VIMRUNTIME/defaults.vim

" }}}
" ============================================================================
" VIM-PLUG BLOCK {{{
" ============================================================================
call plug#begin('~/.vim/plugged')

" Dork Powered Plugin
Plug 'shougo/denite.nvim'

" Util
Plug 'itchyny/lightline.vim'
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'airblade/vim-gitgutter'
Plug 'liuchengxu/vim-which-key'
Plug 'vim-jp/vimdoc-ja'

" Fuzzy Finder
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'

" edit
Plug 'machakann/vim-sandwich'

" coloscheme
Plug 'w0ng/vim-hybrid'
Plug 'arcticicestudio/nord-vim'

call plug#end()

" }}}
" ============================================================================
" File types {{{
" ============================================================================
augroup vimrc_filetype
    autocmd!
    autocmd FileType text      setlocal textwidth=0
    autocmd FileType vim       setlocal foldmethod=marker
augroup END

" }}}
" ============================================================================
" mapping {{{
" ============================================================================
" set reader
let mapleader = "\<Space>"

" reload vimrc
nnoremap <Space>s :source $HOME/.vim/vimrc<CR>

" Clear search hi
nnoremap <silent> <Space>h :noh<CR>

" Multi line move
noremap k gk
noremap j gj
noremap gk k
noremap gj j
noremap <Down> gj
noremap <Up> gk

" Move cursor like emacs in Insert Mode
inoremap <C-b> <Left>
inoremap <C-f> <Right>
inoremap <C-a> <C-o>^
inoremap <C-e> <End>
inoremap <C-d> <Del>
" }}}
" ============================================================================
" options {{{
" ============================================================================

" Encoding
set encoding=utf-8
set fileencodings=utf-8
set fileformats=unix,dos,mac

" Don't creat swap files
set nobackup
set noswapfile
set noundofile

" Appearance
set wildmenu
set display=lastline
set laststatus=2
set cursorline
set number
set relativenumber
set wrap
set list
set listchars=tab:»-,trail:-,eol:↲,extends:»,precedes:«,nbsp:%
set scrolloff=8
set showtabline=2
set synmaxcol=512
set showcmd

" buffer
set hidden
set switchbuf=useopen

" edit
set smarttab
set expandtab
set autoindent
set shiftwidth=4
set shiftround
set tabstop=4
set virtualedit=block
set virtualedit=onemore
set whichwrap=b,s,[,],<,>
set backspace=indent,eol,start

" window
set splitbelow
set splitright
set winwidth=30
set winheight=1
set cmdwinheight=5
set noequalalways

" search
set ignorecase
set smartcase
set incsearch
set hlsearch

" clipborad
set clipboard=unnamed

" Completion
set completeopt=menu,menuone,noinsert,noselect

" help
set helplang=ja,en

" }}}
" ============================================================================
" Plugin setting {{{
" ============================================================================

" Dark Powered Plugin {{{

" denite 
" Prefix key
nnoremap [denite] <Nop>
nmap <C-j> [denite]

" Keymap
" Current direcotry files
nnoremap <silent> [denite]<C-p> :<C-u>Denite file_rec<CR>
" Buffer files
nnoremap <silent> [denite]<C-b> :<C-u>Denite buffer<CR>
" Grep files
nnoremap <silent> [denite]<C-g> :<C-u>Denite -auto_preview grep<CR>
" Grep cursor word
nnoremap <silent> [denite]<C-w> :<C-u>DeniteCursorWord grep<CR>
" Recent files
nnoremap <silent> [denite]<C-r> :<C-u>Denite file_mru<CR>
" Outline
nnoremap <silent> [denite]<C-o> :<C-u>Denite outline<CR>

call denite#custom#map('normal', '<C-n>', '<denite:move_to_next_line>', 'noremap')
call denite#custom#map('normal', '<C-p>', '<denite:move_to_previous_line>', 'noremap')
call denite#custom#map('insert', '<C-n>', '<denite:move_to_next_line>', 'noremap')
call denite#custom#map('insert', '<C-p>', '<denite:move_to_previous_line>', 'noremap')
call denite#custom#map('insert', '<C-f>', '<denite:assign_next_text>', 'noremap')
call denite#custom#map('insert', '<C-b>', '<denite:assign_previous_text>', 'noremap')
call denite#custom#map('insert', '<C-s>', '<denite:do_action:split>', 'noremap')
call denite#custom#map('insert', '<C-v>', '<denite:do_action:vsplit>', 'noremap')
call denite#custom#map('insert', '<C-o>', '<denite:do_action:tabopen>', 'noremap')

" customize ignore globs
call denite#custom#source('file_rec', 'matchers', ['matcher_fuzzy','matcher_ignore_globs'])
call denite#custom#filter('matcher_ignore_globs', 'ignore_globs',
      \ [
      \ '.git/', 'build/', '__pycache__/',
      \ 'images/', '*.o', '*.make',
      \ '*.min.*',
      \ 'img/', 'fonts/'])
" }}}

" Util {{{
" lightline 
let g:lightline = {
    \ 'colorscheme': 'nord',
    \ }

" nerdtree 
let NERDTreeShowHidden=1
nmap <Leader>t :NERDTreeToggle<CR>

" vim-gitgutter
let g:gitgutter_map_keys = 0
map [g <Plug>GitGutterPrevHunk
nmap ]g <Plug>GitGutterNextHunk

" vim-which-key
set timeoutlen=750
nnoremap <silent> <Leader>      :WhichKey '<Leader>'<CR>

" }}}

" fzf {{{

let g:fzf_colors =
\ { 'fg':      ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'Comment'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'Statement'],
  \ 'info':    ['fg', 'PreProc'],
  \ 'border':  ['fg', 'Ignore'],
  \ 'prompt':  ['fg', 'Conditional'],
  \ 'pointer': ['fg', 'Exception'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }

command! -bang -nargs=? -complete=dir Files
  \ call fzf#vim#files(<q-args>, fzf#vim#with_preview(), <bang>0)

command! -bang -nargs=* Rg
  \ call fzf#vim#grep(
  \   'rg --column --line-number --no-heading --color=always --smart-case '.shellescape(<q-args>), 1,
  \   <bang>0 ? fzf#vim#with_preview('up:60%')
  \           : fzf#vim#with_preview('right:50%:hidden', '?'),
  \   <bang>0)
" }}}

" color {{{
"
" nord
let g:nord_comment_brightness = 15
let g:nord_uniform_diff_background = 1
" }}}

" }}}
" ============================================================================
" color {{{
" ============================================================================
filetype plugin indent on
syntax on
set background=dark
colorscheme nord

if exists('&termguicolors')
    set termguicolors
    let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
endif
"}}}
" ============================================================================
